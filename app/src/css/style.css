/* http://meyerweb.com/eric/tools/css/reset/
   v2.0-modified | 20110126
   License: none (public domain)
*/
html, body, div, span, applet, object, iframe,
h1, h2, h3, h4, h5, h6, p, blockquote, pre,
a, abbr, acronym, address, big, cite, code,
del, dfn, em, img, ins, kbd, q, s, samp,
small, strike, strong, sub, sup, tt, var,
b, u, i, center,
dl, dt, dd, ol, ul, li,
fieldset, form, label, legend,
table, caption, tbody, tfoot, thead, tr, th, td,
article, aside, canvas, details, embed,
figure, figcaption, footer, header, hgroup,
menu, nav, output, ruby, section, summary,
time, mark, audio, video {
  margin: 0;
  padding: 0;
  border: 0;
  font-size: 100%;
  font: inherit;
  vertical-align: baseline; }

/* make sure to set some focus styles for accessibility */
:focus {
  outline: 0; }

/* HTML5 display-role reset for older browsers */
article, aside, details, figcaption, figure,
footer, header, hgroup, menu, nav, section {
  display: block; }

body {
  line-height: 1; }

ol, ul {
  list-style: none; }

blockquote, q {
  quotes: none; }

blockquote:before, blockquote:after,
q:before, q:after {
  content: '';
  content: none; }

table {
  border-collapse: collapse;
  border-spacing: 0; }

input[type=search]::-webkit-search-cancel-button,
input[type=search]::-webkit-search-decoration,
input[type=search]::-webkit-search-results-button,
input[type=search]::-webkit-search-results-decoration {
  -webkit-appearance: none;
  -moz-appearance: none; }

input[type=search] {
  -webkit-appearance: none;
  -moz-appearance: none;
  box-sizing: content-box; }

textarea {
  overflow: auto;
  vertical-align: top;
  resize: vertical; }

/**
 * Correct `inline-block` display not defined in IE 6/7/8/9 and Firefox 3.
 */
audio,
canvas,
video {
  display: inline-block;
  *display: inline;
  *zoom: 1;
  max-width: 100%; }

/**
 * Prevent modern browsers from displaying `audio` without controls.
 * Remove excess height in iOS 5 devices.
 */
audio:not([controls]) {
  display: none;
  height: 0; }

/**
 * Address styling not present in IE 7/8/9, Firefox 3, and Safari 4.
 * Known issue: no IE 6 support.
 */
[hidden] {
  display: none; }

/**
 * 1. Correct text resizing oddly in IE 6/7 when body `font-size` is set using
 *    `em` units.
 * 2. Prevent iOS text size adjust after orientation change, without disabling
 *    user zoom.
 */
html {
  font-size: 100%;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
  -ms-text-size-adjust: 100%;
  /* 2 */ }

/**
 * Address `outline` inconsistency between Chrome and other browsers.
 */
a:focus {
  outline: thin dotted; }

/**
 * Improve readability when focused and also mouse hovered in all browsers.
 */
a:active,
a:hover {
  outline: 0; }

/**
 * 1. Remove border when inside `a` element in IE 6/7/8/9 and Firefox 3.
 * 2. Improve image quality when scaled in IE 7.
 */
img {
  border: 0;
  /* 1 */
  -ms-interpolation-mode: bicubic;
  /* 2 */ }

/**
 * Address margin not present in IE 6/7/8/9, Safari 5, and Opera 11.
 */
figure {
  margin: 0; }

/**
 * Correct margin displayed oddly in IE 6/7.
 */
form {
  margin: 0; }

/**
 * Define consistent border, margin, and padding.
 */
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em; }

/**
 * 1. Correct color not being inherited in IE 6/7/8/9.
 * 2. Correct text not wrapping in Firefox 3.
 * 3. Correct alignment displayed oddly in IE 6/7.
 */
legend {
  border: 0;
  /* 1 */
  padding: 0;
  white-space: normal;
  /* 2 */
  *margin-left: -7px;
  /* 3 */ }

/**
 * 1. Correct font size not being inherited in all browsers.
 * 2. Address margins set differently in IE 6/7, Firefox 3+, Safari 5,
 *    and Chrome.
 * 3. Improve appearance and consistency in all browsers.
 */
button,
input,
select,
textarea {
  font-size: 100%;
  /* 1 */
  margin: 0;
  /* 2 */
  vertical-align: baseline;
  /* 3 */
  *vertical-align: middle;
  /* 3 */ }

/**
 * Address Firefox 3+ setting `line-height` on `input` using `!important` in
 * the UA stylesheet.
 */
button,
input {
  line-height: normal; }

/**
 * Address inconsistent `text-transform` inheritance for `button` and `select`.
 * All other form control elements do not inherit `text-transform` values.
 * Correct `button` style inheritance in Chrome, Safari 5+, and IE 6+.
 * Correct `select` style inheritance in Firefox 4+ and Opera.
 */
button,
select {
  text-transform: none; }

/**
 * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
 *    and `video` controls.
 * 2. Correct inability to style clickable `input` types in iOS.
 * 3. Improve usability and consistency of cursor style between image-type
 *    `input` and others.
 * 4. Remove inner spacing in IE 7 without affecting normal text inputs.
 *    Known issue: inner spacing remains in IE 6.
 */
button,
html input[type="button"],
input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
  cursor: pointer;
  /* 3 */
  *overflow: visible;
  /* 4 */ }

/**
 * Re-set default cursor for disabled elements.
 */
button[disabled],
html input[disabled] {
  cursor: default; }

/**
 * 1. Address box sizing set to content-box in IE 8/9.
 * 2. Remove excess padding in IE 8/9.
 * 3. Remove excess padding in IE 7.
 *    Known issue: excess padding remains in IE 6.
 */
input[type="checkbox"],
input[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */
  *height: 13px;
  /* 3 */
  *width: 13px;
  /* 3 */ }

/**
 * 1. Address `appearance` set to `searchfield` in Safari 5 and Chrome.
 * 2. Address `box-sizing` set to `border-box` in Safari 5 and Chrome
 *    (include `-moz` to future-proof).
 */
input[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  /* 2 */
  box-sizing: content-box; }

/**
 * Remove inner padding and search cancel button in Safari 5 and Chrome
 * on OS X.
 */
input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * Remove inner padding and border in Firefox 3+.
 */
button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0; }

/**
 * 1. Remove default vertical scrollbar in IE 6/7/8/9.
 * 2. Improve readability and alignment in all browsers.
 */
textarea {
  overflow: auto;
  /* 1 */
  vertical-align: top;
  /* 2 */ }

/**
 * Remove most spacing between table cells.
 */
table {
  border-collapse: collapse;
  border-spacing: 0; }

html,
button,
input,
select,
textarea {
  color: #222; }

::selection {
  background: #b3d4fc;
  text-shadow: none; }

img {
  vertical-align: middle; }

fieldset {
  border: 0;
  margin: 0;
  padding: 0; }

textarea {
  resize: vertical; }

.chromeframe {
  margin: 0.2em 0;
  background: #ccc;
  color: #000;
  padding: 0.2em 0; }

@font-face {
  font-family: 'Gilroy';
  font-style: normal;
  font-weight: 400;
  src: url("../assets/fonts/Gilroy-Medium.ttf") format("truetype"); }

@font-face {
  font-family: 'Gilroy';
  font-style: normal;
  font-weight: 600;
  src: url("../assets/fonts/Gilroy-Semibold.ttf") format("truetype"); }

@font-face {
  font-family: 'Gilroy';
  font-style: italic;
  font-weight: 400;
  src: url("../assets/fonts/Gilroy-RegularItalic.ttf") format("truetype"); }

@font-face {
  font-family: 'GT Eesti Pro Display';
  font-style: normal;
  font-weight: 400;
  src: url("../assets/fonts/GT-Eesti-Pro-Display-Medium.OTF") format("truetype"); }

@font-face {
  font-family: 'GT Eesti Pro Display';
  font-style: normal;
  font-weight: 700;
  src: url("../assets/fonts/GT-Eesti-Pro-Display-Bold.OTF") format("truetype"); }

html {
  font-size: calc(10000vw / 1500); }

@media all and (max-width: 768px) {
  html {
    font-size: calc(10000vw / 768); } }

@media all and (max-width: 500px) {
  html {
    font-size: calc(10000vw / 500); } }

/*
    screen width: 1500px
    main container: 1146px
    header/footer container: 1380px
*/
.container {
  width: 11.46rem;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-pack: justify;
      justify-content: space-between; }
  .container.xl {
    width: 13.9rem; }

section {
  display: -ms-flexbox;
  display: flex;
  -ms-flex-pack: center;
      justify-content: center; }

.mobile-only {
  display: none; }

.desktop-only {
  display: inline-block; }

@media only screen and (max-width: 768px) {
  .mobile-only {
    display: inline-block; }
  .desktop-only {
    display: none; }
  .container {
    width: 7.03rem; }
    .container.xl {
      width: 7.03rem; } }

.button {
  background: #33C723;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-align: center;
      align-items: center;
  -ms-flex-pack: center;
      justify-content: center;
  width: 2.42rem;
  height: 0.68rem;
  border-radius: 0.1rem;
  font-family: 'GT Eesti Pro Display';
  font-size: 0.18rem;
  line-height: 0.42rem;
  letter-spacing: 0.005rem;
  color: #fff;
  border: none;
  transition: background-color 0.2s ease, box-shadow 0.2s ease-in;
  box-shadow: 0 0.06rem 0.2rem transparent; }
  .button.small {
    width: 2.12rem; }
  .button.blue {
    background-color: #5EBCFF; }
  .button:hover {
    background-color: #25BC13;
    box-shadow: 0 0.06rem 0.2rem rgba(37, 188, 19, 0.35); }
    .button:hover.blue {
      background-color: #47ADF5;
      box-shadow: 0 0.06rem 0.2rem rgba(94, 188, 255, 0.35); }

h1,
.h1 {
  font-family: GT Eesti Pro Display;
  font-size: 0.44rem;
  line-height: 0.56rem;
  text-align: center;
  color: #262D3F; }
  h1 .green,
  .h1 .green {
    color: #33C723; }

h2 {
  font-family: GT Eesti Pro Display;
  font-size: 0.36rem;
  line-height: 0.42rem;
  color: #262D3F;
  font-weight: bold; }

h3 {
  font-family: GT Eesti Pro Display;
  font-size: 0.22rem;
  line-height: 0.27rem;
  color: #262D3F;
  margin: 0.36rem 0 0.13rem; }

.learn-more-link {
  font-family: Gilroy;
  font-size: 0.18rem;
  line-height: 0.3rem;
  color: #5EBCFF;
  margin-bottom: 0.2rem;
  display: block;
  text-decoration: underline; }

p,
li {
  font-family: Gilroy;
  font-size: 0.18rem;
  line-height: 0.3rem;
  color: #666D73; }
  p.blue,
  li.blue {
    color: #5EBCFF; }
  p.italic,
  li.italic {
    font-style: italic; }

li {
  list-style: disc;
  margin-bottom: 0.12rem; }

ul {
  padding-left: 0.19rem; }

a {
  font-family: Gilroy;
  font-size: 15px;
  line-height: 30px;
  color: #214359;
  transition: color 0.2s ease;
  text-decoration: none; }
  a:hover {
    color: #5EBCFF; }

span.green {
  color: #33C723; }

label {
  font-family: Gilroy;
  font-size: 0.12rem;
  line-height: 0.3rem;
  letter-spacing: 0.005rem;
  color: #262D3F; }

@media only screen and (max-width: 768px) {
  p, li {
    font-size: 0.15rem;
    line-height: 0.3rem; }
  ul {
    padding-left: 0.169rem; } }

header {
  display: -ms-flexbox;
  display: flex;
  -ms-flex-pack: center;
      justify-content: center;
  background: #F3FAFF;
  width: 100%;
  padding: 0.3rem 0;
  position: fixed;
  top: 0;
  left: 0;
  right: 0; }
  header .container {
    -ms-flex-pack: justify;
        justify-content: space-between;
    -ms-flex-align: center;
        align-items: center; }
  header nav {
    display: -ms-flexbox;
    display: flex; }
    header nav a {
      margin: 0 0.25rem; }
  header .logo-wrap img {
    display: block;
    width: 1.3077rem;
    height: 0.26rem; }
  header .medium-wrap {
    display: block;
    height: 0.15rem;
    width: 0.19rem; }
    header .medium-wrap img {
      height: 100%;
      width: auto;
      display: block; }

@media only screen and (max-width: 768px) {
  header .medium-wrap {
    height: 0.1875rem;
    width: 0.15625rem; }
  header nav {
    display: none; } }

footer {
  display: -ms-flexbox;
  display: flex;
  -ms-flex-pack: center;
      justify-content: center;
  padding: 0.15rem 0;
  background-color: #262D3F; }
  footer a {
    color: #A9B5BD; }

.home-hero {
  background: #F3FAFF;
  padding: 1.83rem 0 0.85rem; }
  .home-hero .container {
    display: -ms-flexbox;
    display: flex;
    -ms-flex-direction: column;
        flex-direction: column;
    -ms-flex-align: center;
        align-items: center; }
  .home-hero h1 {
    margin-bottom: 0.2rem;
    max-width: 8.14rem; }
  .home-hero img {
    display: block;
    height: 4.14rem;
    width: 8.84rem;
    margin-top: 0.57rem; }

.what-we {
  padding: 1.31rem 0 3.31rem; }
  .what-we img {
    width: 4.66rem;
    height: 4.11rem;
    margin-top: 0.48rem; }
  .what-we p {
    max-width: 5.73rem; }
    .what-we p:first-child {
      margin-top: 0.1rem; }
  .what-we button {
    margin-top: 0.4rem; }

.more-than {
  padding-bottom: 1.05rem; }
  .more-than h2 {
    max-width: 4.6rem;
    margin-bottom: 0.15rem; }
  .more-than p {
    max-width: 4.3rem; }
    .more-than p.italic {
      margin: 0.14rem 0 0.12rem; }
  .more-than button {
    margin-top: 0.38rem; }
  .more-than img {
    display: block;
    height: 5.98rem;
    width: 4.77rem; }

.need-insurance {
  padding-top: 1.4rem;
  padding-bottom: 0.76rem;
  background: #F3FCF2; }
  .need-insurance .right {
    max-width: 4.3rem;
    margin-left: 1.6rem; }
  .need-insurance .container {
    -ms-flex-pack: start;
        justify-content: flex-start; }
  .need-insurance h2 {
    margin: 0.53rem 0 0.2rem; }
  .need-insurance .italic {
    margin: 0.3rem 0 0.45rem; }
  .need-insurance img {
    display: block;
    height: 7.66rem;
    width: 6.11rem; }

.gig-economy {
  padding: 1.6rem 0 1.52rem; }
  .gig-economy .left {
    max-width: 4.66rem;
    padding-top: 0.13rem; }
  .gig-economy p {
    margin: 0.2rem 0 0.26rem; }
  .gig-economy img {
    display: block;
    height: 5.98rem;
    width: 4.77rem; }
  .gig-economy ul {
    max-width: 4rem; }

.who-you-are {
  background-color: #F3FAFF;
  padding: 1.4rem 0 0.76rem; }
  .who-you-are .right {
    max-width: 5.07rem; }
  .who-you-are p {
    margin: 0.14rem 0 0.26rem; }
  .who-you-are img {
    display: block;
    height: 7.66rem;
    width: 6.11rem; }

.contacts {
  display: -ms-flexbox;
  display: flex;
  -ms-flex-align: center;
      align-items: center;
  -ms-flex-direction: column;
      flex-direction: column;
  padding: 1.57rem 0 1.58rem;
  position: relative; }
  .contacts p {
    margin: 0.1rem 0 0.37rem; }
  .contacts img {
    position: absolute;
    left: 0;
    right: 0;
    width: 100%;
    height: auto; }
    .contacts img:first-of-type {
      top: 0; }
    .contacts img:last-of-type {
      bottom: 0; }

@media only screen and (max-width: 768px) {
  .home-hero {
    padding: 1.57rem 0 1.27rem; }
    .home-hero h1 {
      max-width: 97.5%;
      margin-bottom: 0.28rem; }
    .home-hero p {
      text-align: center; }
    .home-hero img {
      width: 100%;
      height: auto;
      margin-top: 1.24rem; }
  .what-we {
    padding: 0.8rem 0 1.72rem; }
    .what-we img {
      height: auto;
      width: 3.6rem; }
    .what-we .container div:last-child {
      display: -ms-flexbox;
      display: flex;
      -ms-flex-direction: column;
          flex-direction: column;
      padding-top: 0rem;
      padding-left: 0.08rem; }
    .what-we p:first-child {
      margin-top: 0.14rem; }
    .what-we p:last-of-type {
      margin-top: 0.12rem; }
  .more-than {
    padding-bottom: 0.94rem; }
    .more-than img {
      height: 4.2rem;
      width: auto;
      margin-top: -0.03rem; }
    .more-than p {
      max-width: 3.32rem; }
  .need-insurance {
    padding: 0.8rem 0 0.698rem; }
    .need-insurance img {
      height: 4.16rem;
      width: 3.32rem; }
    .need-insurance .right {
      margin-left: 0.35rem; }
    .need-insurance h2 {
      margin-top: 0; }
    .need-insurance .italic {
      margin-bottom: 0.15rem; }
  .gig-economy {
    padding: 0.97rem 0 0.736rem; }
    .gig-economy img {
      height: 4.17rem;
      width: 3.32rem; }
    .gig-economy .left {
      padding-top: 0;
      max-width: 3.26rem; }
    .gig-economy p {
      margin: 0.15rem 0; }
  .who-you-are {
    padding: 0.815rem 0 0.58rem; }
    .who-you-are .container {
      width: 7rem; }
    .who-you-are img {
      height: 4.16rem;
      width: 3.32rem; }
    .who-you-are .right {
      margin-left: 0.35rem; }
    .who-you-are ul {
      padding-left: 0.15rem; }
    .who-you-are p {
      margin: 0.15rem 0; }
  .contacts {
    padding-top: 1.57rem; }
    .contacts h2 {
      font-size: 0.44rem;
      line-height: 0.56rem; }
    .contacts p {
      font-size: 0.18rem;
      line-height: 0.3rem;
      max-width: 5.6rem;
      text-align: center; } }

.contacts-hero {
  background-color: #F3FAFF;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-pack: center;
      justify-content: center;
  -ms-flex-align: center;
      align-items: center;
  height: calc(100vh - 0.6rem);
  min-height: 8.5rem; }
  .contacts-hero .container {
    margin-top: 0.3rem;
    -ms-flex-direction: column;
        flex-direction: column;
    -ms-flex-pack: center;
        justify-content: center;
    -ms-flex-align: center;
        align-items: center; }
  .contacts-hero p {
    max-width: 5.25rem;
    margin: 0.21rem 0.33rem;
    text-align: center; }
  .contacts-hero form {
    display: -ms-flexbox;
    display: flex;
    -ms-flex-direction: column;
        flex-direction: column;
    width: 100%;
    max-width: 5.17rem; }
    .contacts-hero form input {
      margin-bottom: 0.22rem;
      max-height: 0.68rem; }
    .contacts-hero form textarea {
      height: 1.36rem; }
    .contacts-hero form span.error {
      color: red;
      position: absolute;
      display: none;
      font-family: Gilroy;
      font-size: 0.11rem;
      line-height: 0.3rem;
      opacity: 0.7;
      bottom: -0.07rem; }
    .contacts-hero form label {
      position: relative; }
      .contacts-hero form label.error span.error {
        display: block; }
  .contacts-hero button {
    margin: 0.4rem auto 0.19rem; }
  .contacts-hero a {
    color: #5EBCFF;
    font-size: 0.19rem;
    line-height: 0.38rem; }
    .contacts-hero a:hover {
      text-decoration: underline; }

input, textarea {
  width: 100%;
  border: 1px solid transparent;
  border-radius: 0.1rem;
  padding: 0.19rem 0.23rem;
  resize: none;
  font-family: Gilroy;
  font-size: 16px;
  line-height: 30px;
  color: #666D73; }
  input:focus, textarea:focus {
    border: 1px solid #8ED0FF; }
  input.error, textarea.error {
    border: 1px solid #FF1B1B; }

.resources-hero {
  background: #F3FAFF;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-direction: column;
      flex-direction: column;
  -ms-flex-align: center;
      align-items: center;
  padding: 1.92rem 0 1.76rem; }
  .resources-hero img {
    position: absolute;
    top: 2.26rem;
    right: 0; }
  .resources-hero .container {
    -ms-flex-direction: column;
        flex-direction: column;
    -ms-flex-align: start;
        align-items: flex-start; }
  .resources-hero h2 {
    max-width: 6.8rem;
    margin: 0.17rem 0 0.99rem; }
  .resources-hero .columns {
    columns: 2; }
  .resources-hero .learn-more-link {
    margin-bottom: 0.14rem; }

.independent-contractors {
  padding: 1.4rem 0 0; }
  .independent-contractors h2 {
    max-width: 4.6rem; }
  .independent-contractors .text {
    max-width: 5.54rem; }
  .independent-contractors p {
    max-width: 4.93rem; }
    .independent-contractors p:first-of-type {
      margin: 0.2rem 0 0.3rem; }
  .independent-contractors img {
    display: block;
    height: 5.98rem;
    width: 4.77rem; }

.services {
  padding: 1.4rem 0 0; }
  .services h2 {
    max-width: 4.07rem; }
  .services .text {
    max-width: 4.9rem; }
  .services p:first-of-type {
    margin: 0.2rem 0 0.3rem; }
  .services .learn-more-link {
    max-width: 4.78rem; }
  .services img {
    display: block;
    height: 5.98rem;
    width: 4.77rem; }

.providers {
  padding: 1.4rem 0 1.4rem; }
  .providers .text {
    max-width: 4.93rem; }
  .providers p:first-of-type {
    margin: 0.2rem 0 0.3rem; }
  .providers .learn-more-link {
    max-width: 4.78rem; }
  .providers img {
    display: block;
    height: 5.98rem;
    width: 4.77rem; }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
